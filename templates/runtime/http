map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

{% for name, proxy in args.iteritems() %}{% if proxy.get('http') %}
server {
    listen 80;
    server_name {{ name }};

    proxy_set_header Host             $http_host;   # required for docker client's sake
    proxy_set_header X-Real-IP        $remote_addr; # pass on real client's IP
    client_max_body_size 0; # disable any limits to avoid HTTP 413 for large image uploads
    chunked_transfer_encoding on;

    error_page 402 /errors/402.html;
    error_page 403 /errors/403.html;
    error_page 404 /errors/404.html;
    error_page 500 /errors/500.html;
    error_page 501 /errors/501.html;
    error_page 502 /errors/502.html;
    error_page 503 /errors/503.html;

    location /errors {
        root /etc/lbdock/conf/nginx;
        internal;
    }

    location / {
    {% if proxy.get('htaccess') != None and config.field('nginx_lua_auth') %}
        access_by_lua_file /etc/nginx/lua/access_by_lua.lua;
    {% endif %}
        resolver {{ config.field('docker_bridge_ip') }};
        set $backend_upstream "http://{{ name }}:{{ proxy.get('http') }}";
        proxy_http_version 1.1;
        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;
        proxy_intercept_errors on;
        proxy_pass $backend_upstream;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
        proxy_set_header Host $http_host;
                                                                                                }
}
{% endif %}{% endfor %}
